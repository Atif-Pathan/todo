"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktodo_app"] = self["webpackChunktodo_app"] || []).push([["src_components_EmbedForm_js"],{

/***/ "./src/components/EmbedForm.js":
/*!*************************************!*\
  !*** ./src/components/EmbedForm.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   openEmbeddedForm: () => (/* binding */ openEmbeddedForm)\n/* harmony export */ });\n/* harmony import */ var _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/TaskManager.js */ \"./src/modules/TaskManager.js\");\n\r\n\r\nfunction openEmbeddedForm(currentTabId = null, editRow = false, todoId = null, categoryName = null, editPressed = false) {\r\n\r\n  const row = document.querySelector(\".todo-item-row\");\r\n  console.log(categoryName);\r\n  console.log(todoId);\r\n  let currentCategory = null;\r\n  let todoItemRow = null;\r\n  if (categoryName && todoId) {\r\n    currentCategory = _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCategoryByName(categoryName);\r\n    todoItemRow = currentCategory.getTodoById(todoId);\r\n  }\r\n  const contentView = document.querySelector(\".content-view\");\r\n  if (!contentView) return console.warn(\"No .content-view found!\");\r\n\r\n  // don’t duplicate form if already one in place\r\n  if (contentView.querySelector(\".embedded-form\")) {\r\n    return; \r\n  }\r\n\r\n  const formContainer = document.createElement(\"div\");\r\n  formContainer.classList.add(\"embedded-form\");\r\n\r\n  // Title input\r\n  const titleDiv = document.createElement(\"div\");\r\n  titleDiv.classList.add(\"title-div\");\r\n  const titleLabel = document.createElement(\"label\");\r\n  titleLabel.textContent = \"Title (required):\";\r\n  titleLabel.htmlFor = 'title';\r\n  const titleInput = document.createElement(\"input\");\r\n  titleInput.type = \"text\";\r\n  titleInput.required = true;\r\n  titleInput.id = \"title\";\r\n  titleInput.placeholder = \"Title\";\r\n  titleInput.addEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Enter\" && titleInput.value.trim()) {\r\n      if (editRow) {\r\n        handleUpdateTodo();\r\n      } else {\r\n        handleCreateTodo();\r\n      }\r\n    }\r\n  })\r\n//   titleDiv.appendChild(titleLabel);\r\n  titleDiv.appendChild(titleInput);\r\n\r\n  // Description input\r\n  const descDiv = document.createElement(\"div\");\r\n  descDiv.classList.add(\"desc-div\");\r\n  const descriptionLabel = document.createElement(\"label\");\r\n  descriptionLabel.textContent = \"Description:\";\r\n  descriptionLabel.htmlFor = \"description\";\r\n  const descriptionInput = document.createElement(\"textarea\");\r\n  descriptionInput.id = \"description\";\r\n  descriptionInput.maxLength = 400;\r\n  descriptionInput.placeholder = \"Description\";\r\n//   descDiv.appendChild(descriptionLabel);\r\n  descDiv.appendChild(descriptionInput);\r\n\r\n  // Due date input\r\n  const dueDateDiv = document.createElement(\"div\");\r\n  dueDateDiv.classList.add(\"due-date-div\");\r\n  const dueDateLabel = document.createElement(\"label\");\r\n  dueDateLabel.textContent = \"Due Date\";\r\n  dueDateLabel.htmlFor = \"select-date\";\r\n  const dueDateInput = document.createElement(\"input\");\r\n  dueDateInput.type = \"date\";\r\n  dueDateInput.id = \"select-date\";\r\n\r\n  // if (currentTabId && currentTabId.startsWith(\"today\")) {\r\n    // pre-populate date to today\r\n    const today = new Date(); // Get today's date\r\n    const year = today.getFullYear(); // Get the year\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Get the month, pad to 2 digits\r\n    const day = String(today.getDate()).padStart(2, '0'); // Get the day, pad to 2 digits\r\n    dueDateInput.value = `${year}-${month}-${day}`;\r\n  // }\r\n   \r\n  dueDateDiv.appendChild(dueDateLabel);\r\n  dueDateDiv.appendChild(dueDateInput);\r\n\r\n  // Priority input\r\n  const prioDiv = document.createElement(\"div\");\r\n  prioDiv.classList.add(\"prio-div\");\r\n  const priorityLabel = document.createElement(\"label\");\r\n  priorityLabel.textContent = \"Priority\";\r\n  priorityLabel.htmlFor = \"prio\";\r\n  const prioritySelect = document.createElement(\"select\");\r\n  prioritySelect.id = \"prio\";\r\n  const priorities = [\"Low\", \"Medium\", \"High\"];\r\n  priorities.forEach((priority) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = priority.toLowerCase();\r\n    option.textContent = priority;\r\n    prioritySelect.appendChild(option);\r\n  });\r\n  prioDiv.appendChild(priorityLabel);\r\n  prioDiv.appendChild(prioritySelect);\r\n\r\n  // Category dropdown\r\n  const catDiv = document.createElement(\"div\");\r\n  catDiv.classList.add(\"cat-div\");\r\n  const categoryLabel = document.createElement(\"label\");\r\n  categoryLabel.textContent = \"Category\";\r\n  categoryLabel.htmlFor = \"category-select\";\r\n  const categorySelect = document.createElement(\"select\");\r\n  categorySelect.id = \"category-select\";\r\n  catDiv.appendChild(categoryLabel);\r\n  catDiv.appendChild(categorySelect);\r\n\r\n  // “Create New Category” hidden input\r\n  const newCatInputDiv = document.createElement(\"div\");\r\n  newCatInputDiv.classList.add(\"new-category-input-div\");\r\n  const newCategoryInput = document.createElement(\"input\");\r\n  newCategoryInput.type = \"text\";\r\n  newCategoryInput.placeholder = \"Enter new category\";\r\n  newCategoryInput.classList.add(\"new-category-input\");\r\n  newCategoryInput.disabled = true;\r\n  // newCategoryInput.style.display = \"none\";\r\n  newCatInputDiv.appendChild(newCategoryInput);\r\n\r\n  // Populate categories\r\n  function populateCategories() {\r\n    categorySelect.innerHTML = \"\";\r\n    const categories = _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getAllCategories();\r\n    if (categories.length === 0) {\r\n      const noCatOption = document.createElement(\"option\");\r\n      noCatOption.value = \"\";\r\n      noCatOption.textContent = \"No categories available\";\r\n      noCatOption.disabled = true;\r\n      noCatOption.selected = true;\r\n      categorySelect.appendChild(noCatOption);\r\n    } else {\r\n      categories.forEach((cat) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = cat.name;\r\n        option.textContent = cat.name;\r\n        categorySelect.appendChild(option);\r\n      });\r\n    }\r\n\r\n    // Add “Create New Category” option\r\n    const createOption = document.createElement(\"option\");\r\n    createOption.value = \"create-new\";\r\n    createOption.textContent = \"Add New Category\";\r\n    if (!editPressed) {\r\n      categorySelect.appendChild(createOption);\r\n    }\r\n\r\n    // Figure out which category to preselect\r\n    let preselectName = null;\r\n\r\n    // If currentTabId is a category (like \"category-Work\")\r\n    if (currentTabId && currentTabId.startsWith(\"category-\")) {\r\n      const catName = currentTabId.replace(\"category-\", \"\");\r\n      const foundCat = _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCategoryByName(catName);\r\n      if (foundCat) {\r\n        preselectName = foundCat.name;\r\n      }\r\n    }\r\n\r\n    // Otherwise default to \"General\" if it exists\r\n    if (!preselectName) {\r\n      const generalCat = _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCategoryByName(\"General\");\r\n      if (generalCat) {\r\n        preselectName = \"General\";\r\n      } else if (categories.length > 0) {\r\n        preselectName = categories[0].name;\r\n      }\r\n    }\r\n\r\n    if (preselectName) {\r\n      categorySelect.value = preselectName;\r\n    }\r\n  }\r\n\r\n  populateCategories();\r\n\r\n  categorySelect.addEventListener(\"change\", () => {\r\n    if (categorySelect.value === \"create-new\") {\r\n      newCategoryInput.disabled = false;\r\n      newCategoryInput.focus();\r\n    } else {\r\n      newCategoryInput.disabled = true;\r\n    }\r\n  });\r\n\r\n  // The “Create” + “Cancel” buttons\r\n  const buttonContainer = document.createElement(\"div\");\r\n  buttonContainer.classList.add(\"modal-buttons\");\r\n\r\n  const createButton = document.createElement(\"button\");\r\n  createButton.textContent = \"Create\";\r\n  createButton.addEventListener(\"click\", () => {\r\n    if (editRow) {\r\n      handleUpdateTodo();\r\n    } else {\r\n      handleCreateTodo();\r\n    }\r\n  });\r\n\r\n  const cancelButton = document.createElement(\"button\");\r\n  cancelButton.textContent = \"Cancel\";\r\n  cancelButton.addEventListener(\"click\", handleCancel);\r\n\r\n  buttonContainer.appendChild(createButton);\r\n  buttonContainer.appendChild(cancelButton);\r\n\r\n  // Append all inputs to the container\r\n//   formContainer.appendChild(titleLabel);\r\n//   formContainer.appendChild(titleInput);\r\n  formContainer.appendChild(titleDiv);\r\n\r\n//   formContainer.appendChild(descriptionLabel);\r\n//   formContainer.appendChild(descriptionInput);\r\n  formContainer.appendChild(descDiv);\r\n\r\n//   formContainer.appendChild(dueDateLabel);\r\n//   formContainer.appendChild(dueDateInput);\r\n  formContainer.appendChild(dueDateDiv);\r\n\r\n//   formContainer.appendChild(priorityLabel);\r\n//   formContainer.appendChild(prioritySelect);\r\n  formContainer.appendChild(prioDiv);\r\n\r\n//   formContainer.appendChild(categoryLabel);\r\n//   formContainer.appendChild(categorySelect);\r\n  formContainer.appendChild(catDiv);\r\n  formContainer.appendChild(newCatInputDiv);\r\n  \r\n  formContainer.appendChild(buttonContainer);\r\n\r\n  const contentHeader = contentView.querySelector(\".content-header\");\r\n  if (contentHeader) {\r\n    contentHeader.insertAdjacentElement(\"afterend\", formContainer);\r\n  } else {\r\n    // fallback: just append to contentView\r\n    contentView.appendChild(formContainer);\r\n  }\r\n\r\n  if (editRow && todoItemRow) {\r\n    titleInput.value = todoItemRow.getTitle();\r\n    descriptionInput.value = todoItemRow.getDescription();\r\n    categorySelect.value = categoryName;\r\n    prioritySelect.value  = todoItemRow.getPriority();\r\n    dueDateInput.value = todoItemRow.getDueDate();\r\n  }\r\n\r\n  function handleUpdateTodo() {\r\n    const currCat = categorySelect.value;\r\n    if (categorySelect.options.length > 0) {\r\n      console.log(\"removed\");\r\n      \r\n      const lastIndex = categorySelect.options.length - 1; // Get the index of the last option\r\n      categorySelect.remove(lastIndex); // Remove the last option\r\n    }\r\n    // console.log(\"updated\");\r\n    \r\n    const updatedDetails = {\r\n      title: titleInput.value.trim(),\r\n      description: descriptionInput.value.trim(),\r\n      dueDate: dueDateInput.value ? parseDueDate(dueDateInput.value) : null,\r\n      priority: prioritySelect.value,\r\n      // status: todoItemRow.getStatus()\r\n    };\r\n    // update first\r\n    _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].updateTodo(todoId, categoryName, updatedDetails);\r\n    console.log(\"todo updated!\");\r\n    console.log(categoryName);\r\n    console.log(currentTabId);\r\n    // then move if needed\r\n    if (currCat !== categoryName) {\r\n      console.log(currCat);\r\n      console.log(categoryName);\r\n      \r\n      // need to update category/ move todo\r\n      // throw new Error(\"error, cant change category\");\r\n      _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].moveTodo(todoId, categoryName, currCat);\r\n      console.log(`moved todo from ${categoryName} to ${currCat}`);\r\n    }   \r\n    if ((categoryName !== \"upcoming\" || categoryName !== \"today\") && categoryName === currentTabId.replace('category-', '')) {\r\n      const radioId = `category-${categoryName}`;\r\n      const radioBtn = document.getElementById(radioId);\r\n      if (radioBtn) {\r\n        radioBtn.checked = true;\r\n        console.log(`radio btn checked for: ${radioId}`);\r\n        console.log(`current tab: ${currentTabId}`);\r\n      }\r\n      console.log(`current status: ${todoItemRow.getStatus()}`);\r\n    }\r\n    if (todoItemRow.getStatus() === 'overdue') {\r\n      row.classList.add('overdue');\r\n    } else {\r\n      row.classList.remove('overdue');\r\n    }\r\n    handleCancel();\r\n  }\r\n\r\n  // === CREATE BUTTON LOGIC ===\r\n  function handleCreateTodo() {\r\n    const todoDetails = {\r\n      title: titleInput.value.trim(),\r\n      description: descriptionInput.value.trim(),\r\n      dueDate: dueDateInput.value ? parseDueDate(dueDateInput.value) : null,\r\n      priority: prioritySelect.value,\r\n    };\r\n\r\n    if (!todoDetails.title) {\r\n      alert(\"Title is required.\");\r\n      return;\r\n    }\r\n\r\n    let chosenCategory = categorySelect.value;\r\n    if (chosenCategory === \"create-new\") {\r\n      const newCatName = newCategoryInput.value.trim();\r\n      if (!newCatName) {\r\n        alert(\"Category name is required.\");\r\n        return;\r\n      }\r\n      const formatted = newCatName.charAt(0).toUpperCase() + newCatName.slice(1);\r\n      try {\r\n        _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createCategory(formatted);\r\n        chosenCategory = formatted;\r\n      } catch (error) {\r\n        alert(error.message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      _modules_TaskManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addTodoToCategory(todoDetails, chosenCategory);\r\n      // Optionally: Switch to the newly added category’s tab\r\n      const radioId = `category-${chosenCategory}`;\r\n      const radioEl = document.getElementById(radioId);\r\n      if (radioEl) {\r\n        radioEl.checked = true;\r\n        console.log(`${radioId} checked`);\r\n        \r\n        const evt = new Event(\"change\", { bubbles: true });\r\n        radioEl.dispatchEvent(evt);\r\n      }\r\n      // Hide the embedded form\r\n      handleCancel();\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  function parseDueDate(inputValue) {\r\n    const [year, month, day] = inputValue.split(\"-\").map(Number);\r\n    return new Date(year, month - 1, day);\r\n  }\r\n\r\n  function handleCancel() {\r\n    // Remove the form from the DOM\r\n    if (formContainer.parentNode) {\r\n      formContainer.parentNode.removeChild(formContainer);\r\n    }\r\n  }\r\n\r\n  titleInput.focus();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/EmbedForm.js\n");

/***/ })

}]);